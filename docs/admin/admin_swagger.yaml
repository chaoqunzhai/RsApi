definitions:
  dto.AssetCategoryDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.AssetCategoryInsertReq:
    properties:
      categoryName:
        type: string
      remark:
        type: string
    type: object
  dto.AssetCategoryUpdateReq:
    properties:
      categoryName:
        type: string
      id:
        description: 主键
        type: integer
      remark:
        type: string
    type: object
  dto.AssetDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.AssetDisposalDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.AssetDisposalInsertReq:
    properties:
      amount:
        type: number
      assetId:
        type: integer
      disposalAt:
        type: string
      disposalPerson:
        type: integer
      disposalType:
        type: integer
      disposalWay:
        type: integer
      locationId:
        type: integer
      reason:
        type: string
      remark:
        type: string
    type: object
  dto.AssetDisposalUpdateReq:
    properties:
      amount:
        type: number
      assetId:
        type: integer
      disposalAt:
        type: string
      disposalPerson:
        type: integer
      disposalType:
        type: integer
      disposalWay:
        type: integer
      id:
        description: 主键
        type: integer
      locationId:
        type: integer
      reason:
        type: string
      remark:
        type: string
    type: object
  dto.AssetGroupDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.AssetGroupInsertReq:
    properties:
      groupName:
        type: string
      mainAssetId:
        type: integer
      remark:
        type: string
    type: object
  dto.AssetGroupMemberDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.AssetGroupMemberInsertReq:
    properties:
      assetGroupId:
        type: integer
      assetId:
        type: integer
      isMain:
        type: integer
    type: object
  dto.AssetGroupMemberUpdateReq:
    properties:
      assetGroupId:
        type: integer
      assetId:
        type: integer
      id:
        description: 主键
        type: integer
      isMain:
        type: integer
    type: object
  dto.AssetGroupUpdateReq:
    properties:
      groupName:
        type: string
      id:
        description: 主键
        type: integer
      mainAssetId:
        type: integer
      remark:
        type: string
    type: object
  dto.AssetInboundDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.AssetInboundInsertReq:
    properties:
      assetId:
        type: integer
      fromCode:
        type: string
      inboundAt:
        type: string
      inboundBy:
        type: integer
      inboundFrom:
        type: integer
      remark:
        type: string
      warehouseId:
        type: integer
    type: object
  dto.AssetInboundUpdateReq:
    properties:
      assetId:
        type: integer
      fromCode:
        type: string
      id:
        description: 主键
        type: integer
      inboundAt:
        type: string
      inboundBy:
        type: integer
      inboundFrom:
        type: integer
      remark:
        type: string
      warehouseId:
        type: integer
    type: object
  dto.AssetInsertReq:
    properties:
      assetCode:
        type: string
      brand:
        type: string
      categoryId:
        type: integer
      remark:
        type: string
      snCode:
        type: string
      specification:
        type: string
      status:
        type: integer
      unit:
        type: string
      unitPrice:
        type: number
    type: object
  dto.AssetOutboundDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.AssetOutboundInsertReq:
    properties:
      assetId:
        type: integer
      outboundAt:
        type: string
      outboundBy:
        type: integer
      outboundTo:
        type: integer
      remark:
        type: string
      warehouseId:
        type: integer
    type: object
  dto.AssetOutboundUpdateReq:
    properties:
      assetId:
        type: integer
      id:
        description: 主键
        type: integer
      outboundAt:
        type: string
      outboundBy:
        type: integer
      outboundTo:
        type: integer
      remark:
        type: string
      warehouseId:
        type: integer
    type: object
  dto.AssetPurchaseApplyDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.AssetPurchaseApplyInsertReq:
    properties:
      applyAt:
        type: string
      applyCode:
        type: string
      applyReason:
        type: string
      applyUser:
        type: integer
      approveAt:
        type: string
      approver:
        type: integer
      brand:
        type: string
      categoryId:
        type: integer
      quantity:
        type: integer
      remark:
        type: string
      specification:
        type: string
      status:
        type: integer
      supplierId:
        type: integer
      totalAmount:
        type: number
      unit:
        type: string
      unitPrice:
        type: number
    type: object
  dto.AssetPurchaseApplyUpdateReq:
    properties:
      applyAt:
        type: string
      applyCode:
        type: string
      applyReason:
        type: string
      applyUser:
        type: integer
      approveAt:
        type: string
      approver:
        type: integer
      brand:
        type: string
      categoryId:
        type: integer
      id:
        description: 主键
        type: integer
      quantity:
        type: integer
      remark:
        type: string
      specification:
        type: string
      status:
        type: integer
      supplierId:
        type: integer
      totalAmount:
        type: number
      unit:
        type: string
      unitPrice:
        type: number
    type: object
  dto.AssetPurchaseDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.AssetPurchaseInsertReq:
    properties:
      brand:
        type: string
      categoryId:
        type: integer
      purchaseAt:
        type: string
      purchaseCode:
        type: string
      purchaseUser:
        type: integer
      quantity:
        type: integer
      remark:
        type: string
      specification:
        type: string
      supplierId:
        type: integer
      totalAmount:
        type: number
      unit:
        type: string
      unitPrice:
        type: number
    type: object
  dto.AssetPurchaseUpdateReq:
    properties:
      brand:
        type: string
      categoryId:
        type: integer
      id:
        description: 主键
        type: integer
      purchaseAt:
        type: string
      purchaseCode:
        type: string
      purchaseUser:
        type: integer
      quantity:
        type: integer
      remark:
        type: string
      specification:
        type: string
      supplierId:
        type: integer
      totalAmount:
        type: number
      unit:
        type: string
      unitPrice:
        type: number
    type: object
  dto.AssetReturnDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.AssetReturnInsertReq:
    properties:
      assetId:
        type: integer
      reason:
        type: string
      remark:
        type: string
      returnAt:
        type: string
      returnPerson:
        type: integer
    type: object
  dto.AssetReturnUpdateReq:
    properties:
      assetId:
        type: integer
      id:
        description: 主键
        type: integer
      reason:
        type: string
      remark:
        type: string
      returnAt:
        type: string
      returnPerson:
        type: integer
    type: object
  dto.AssetStockDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.AssetStockInsertReq:
    properties:
      categoryId:
        type: integer
      quantity:
        type: integer
      remark:
        type: string
      warehouseId:
        type: integer
    type: object
  dto.AssetStockUpdateReq:
    properties:
      categoryId:
        type: integer
      id:
        description: 主键
        type: integer
      quantity:
        type: integer
      remark:
        type: string
      warehouseId:
        type: integer
    type: object
  dto.AssetSupplierDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.AssetSupplierInsertReq:
    properties:
      address:
        type: string
      contactPerson:
        type: string
      email:
        type: string
      phoneNumber:
        type: string
      remark:
        type: string
      supplierName:
        type: string
    type: object
  dto.AssetSupplierUpdateReq:
    properties:
      address:
        type: string
      contactPerson:
        type: string
      email:
        type: string
      id:
        description: 主键
        type: integer
      phoneNumber:
        type: string
      remark:
        type: string
      supplierName:
        type: string
    type: object
  dto.AssetUpdateReq:
    properties:
      assetCode:
        type: string
      brand:
        type: string
      categoryId:
        type: integer
      id:
        description: 主键
        type: integer
      remark:
        type: string
      snCode:
        type: string
      specification:
        type: string
      status:
        type: integer
      unit:
        type: string
      unitPrice:
        type: number
    type: object
  dto.AssetWarehouseDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.AssetWarehouseInsertReq:
    properties:
      administratorId:
        type: integer
      remark:
        type: string
      warehouseName:
        type: string
    type: object
  dto.AssetWarehouseUpdateReq:
    properties:
      administratorId:
        type: integer
      id:
        description: 主键
        type: integer
      remark:
        type: string
      warehouseName:
        type: string
    type: object
  dto.GetSetSysConfigReq:
    properties:
      configKey:
        type: string
      configValue:
        type: string
    type: object
  dto.PassWord:
    properties:
      newPassword:
        type: string
      oldPassword:
        type: string
    type: object
  dto.ResetSysUserPwdReq:
    properties:
      password:
        type: string
      userId:
        description: 用户ID
        type: integer
    type: object
  dto.RoleDataScopeReq:
    properties:
      dataScope:
        type: string
      deptIds:
        items:
          type: integer
        type: array
      roleId:
        type: integer
    required:
    - dataScope
    - roleId
    type: object
  dto.RsBandwidthFeesInsertReq:
    properties:
      LinePrice:
        type: number
      charging:
        type: integer
      down:
        type: number
      id:
        description: 主键编码
        type: integer
      isp:
        type: integer
      managerLineCost:
        type: number
      moreDialing:
        type: integer
      region: {}
      transProd:
        type: integer
      up:
        type: number
    type: object
  dto.RsBusinessDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.RsBusinessInsertReq:
    properties:
      billingMethod:
        type: integer
      costCnf:
        items:
          $ref: '#/definitions/dto.RsCostCnfInsertReq'
        type: array
      desc:
        type: string
      enName:
        type: string
      endUsage:
        type: string
      name:
        type: string
      parentId:
        type: integer
      startUsage:
        type: string
      status:
        type: integer
    type: object
  dto.RsBusinessUpdateReq:
    properties:
      billingMethod:
        type: integer
      costCnf:
        items:
          $ref: '#/definitions/dto.RsCostCnfInsertReq'
        type: array
      desc:
        type: string
      enName:
        type: string
      endUsage:
        type: string
      id:
        description: 主键编码
        type: integer
      name:
        type: string
      parentId:
        type: integer
      startUsage:
        type: string
      status:
        type: integer
    type: object
  dto.RsContractDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.RsContractInsertReq:
    properties:
      accountName:
        type: string
      address:
        type: string
      bandwidthFees:
        items:
          $ref: '#/definitions/dto.RsBandwidthFeesInsertReq'
        type: array
      bankAccount:
        type: string
      bankName:
        type: string
      buId:
        type: integer
      customId:
        type: integer
      desc:
        type: string
      endTimeAt:
        type: string
      identifyNumber:
        type: string
      name:
        type: string
      number:
        type: string
      phone:
        type: string
      settlementType:
        type: integer
      signatoryId:
        type: integer
      startTimeAt:
        type: string
      type:
        type: integer
      userId:
        type: integer
    type: object
  dto.RsContractUpdateReq:
    properties:
      accountName:
        type: string
      address:
        type: string
      bandwidthFees:
        items:
          $ref: '#/definitions/dto.RsBandwidthFeesInsertReq'
        type: array
      bankAccount:
        type: string
      bankName:
        type: string
      buId:
        type: integer
      customId:
        type: integer
      desc:
        type: string
      endTimeAt:
        type: string
      id:
        description: 主键编码
        type: integer
      identifyNumber:
        type: string
      name:
        type: string
      number:
        type: string
      phone:
        type: string
      settlementType:
        type: integer
      signatoryId:
        type: integer
      startTimeAt:
        type: string
      type:
        type: integer
      userId:
        type: integer
    type: object
  dto.RsCostCnfInsertReq:
    properties:
      bandwidthLimit:
        type: number
      bandwidthLower:
        type: number
      buId:
        type: integer
      dialType:
        type: integer
      id:
        description: 主键编码
        type: integer
      ipType:
        type: integer
      isp:
        type: integer
      minimum:
        type: number
      price:
        type: number
    type: object
  dto.RsCustomDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.RsCustomInsertReq:
    properties:
      address:
        type: string
      cooperation:
        type: integer
      desc:
        type: string
      name:
        type: string
      region:
        type: string
      type:
        type: integer
    type: object
  dto.RsCustomUpdateReq:
    properties:
      address:
        type: string
      cooperation:
        type: integer
      desc:
        type: string
      id:
        description: 主键编码
        type: integer
      name:
        type: string
      region:
        type: string
      type:
        type: integer
    type: object
  dto.RsCustomUserDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.RsCustomUserInsertReq:
    properties:
      address:
        type: string
      buId:
        type: integer
      customId:
        type: integer
      dept:
        type: string
      desc:
        type: string
      duties:
        type: string
      email:
        type: string
      phone:
        type: string
      region:
        type: string
      userName:
        type: string
    type: object
  dto.RsCustomUserUpdateReq:
    properties:
      address:
        type: string
      buId:
        type: integer
      customId:
        type: integer
      dept:
        type: string
      desc:
        type: string
      duties:
        type: string
      email:
        type: string
      id:
        description: 主键编码
        type: integer
      phone:
        type: string
      region:
        type: string
      userName:
        type: string
    type: object
  dto.RsDialDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.RsDialInsertReq:
    properties:
      account:
        type: string
      broadbandType:
        type: integer
      contractId:
        type: integer
      customId:
        type: integer
      desc:
        type: string
      deviceId:
        type: integer
      dialName:
        type: string
      hostId:
        type: integer
      idcId:
        type: integer
      ip:
        type: string
      isManager:
        type: integer
      ispId:
        type: integer
      mac:
        type: string
      networkingStatus:
        type: integer
      pass:
        type: string
      runTimeAt:
        type: string
      source:
        type: integer
      status:
        type: integer
    type: object
  dto.RsDialUpdateReq:
    properties:
      RunTimeAt:
        type: string
      account:
        type: string
      broadbandType:
        type: integer
      contractId:
        type: integer
      customId:
        type: integer
      desc:
        type: string
      deviceId:
        type: integer
      dialName:
        type: string
      hostId:
        type: integer
      id:
        description: 主键编码
        type: integer
      idcId:
        type: integer
      ip:
        type: string
      isManager:
        type: integer
      ispId:
        type: integer
      mac:
        type: string
      networkingStatus:
        type: integer
      pass:
        type: string
      source:
        type: integer
      status:
        type: integer
    type: object
  dto.RsHostChargingDayDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.RsHostChargingDayInsertReq:
    properties:
      banlance95:
        type: string
      businessId:
        type: string
      cost:
        type: string
      desc:
        type: string
      hostId:
        type: string
      sla:
        type: string
    type: object
  dto.RsHostChargingDayUpdateReq:
    properties:
      banlance95:
        type: string
      businessId:
        type: string
      cost:
        type: string
      desc:
        type: string
      hostId:
        type: string
      id:
        description: 主键编码
        type: integer
      sla:
        type: string
    type: object
  dto.RsHostDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.RsHostInsertReq:
    properties:
      address:
        type: string
      balance:
        type: number
      belong:
        type: integer
      cpu:
        type: integer
      desc:
        type: string
      disk:
        type: string
      hostName:
        type: string
      ip:
        type: string
      isp:
        type: integer
      kernel:
        type: string
      layer:
        type: integer
      memory:
        type: integer
      netDevice:
        type: string
      operator:
        type: string
      region:
        type: string
      remark:
        type: string
      sn:
        type: string
      status:
        type: integer
    type: object
  dto.RsHostSwitchLogDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.RsHostUpdateReq:
    properties:
      address:
        type: string
      balance:
        type: number
      belong:
        type: integer
      cpu:
        type: integer
      desc:
        type: string
      disk:
        type: string
      hostName:
        type: string
      id:
        description: 主键编码
        type: integer
      ip:
        type: string
      isp:
        type: integer
      kernel:
        type: string
      layer:
        type: integer
      memory:
        type: integer
      netDevice:
        type: string
      region:
        type: string
      remark:
        type: string
      sn:
        type: string
      status:
        type: integer
    type: object
  dto.RsIdcDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.RsIdcInsertReq:
    properties:
      address:
        type: string
      belong:
        type: integer
      buId:
        type: integer
      customId:
        type: integer
      desc:
        type: string
      ipV6:
        type: integer
      moreDialing:
        type: integer
      name:
        type: string
      number:
        type: integer
      region:
        type: string
      status:
        type: integer
      transProvince:
        type: integer
      typeId:
        type: integer
      webHookUrl:
        type: string
      wechatName:
        type: string
    type: object
  dto.RsIdcUpdateReq:
    properties:
      address:
        type: string
      belong:
        type: integer
      buId:
        type: integer
      customId:
        type: integer
      desc:
        type: string
      id:
        description: 主键编码
        type: integer
      ipV6:
        type: integer
      moreDialing:
        type: integer
      name:
        type: string
      number:
        type: integer
      region:
        type: string
      status:
        type: integer
      transProvince:
        type: integer
      typeId:
        type: integer
      webHookUrl:
        type: string
      wechatName:
        type: string
    type: object
  dto.RsTagDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.RsTagInsertReq:
    properties:
      desc:
        type: string
      enable:
        type: integer
      layer:
        type: string
      name:
        type: string
    type: object
  dto.RsTagUpdateReq:
    properties:
      desc:
        type: string
      enable:
        type: integer
      id:
        description: 主键编码
        type: integer
      layer:
        type: string
      name:
        type: string
    type: object
  dto.SysApiDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.SysApiUpdateReq:
    properties:
      action:
        type: string
      handle:
        type: string
      id:
        description: 编码
        type: integer
      path:
        type: string
      title:
        type: string
      type:
        type: string
    type: object
  dto.SysConfigByKeyReq:
    properties:
      configKey:
        type: string
    type: object
  dto.SysConfigControl:
    properties:
      configKey:
        type: string
      configName:
        type: string
      configType:
        type: string
      configValue:
        type: string
      id:
        description: 编码
        type: integer
      isFrontend:
        type: string
      remark:
        type: string
    type: object
  dto.SysDeptDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.SysDeptInsertReq:
    properties:
      deptId:
        description: 编码
        type: integer
      deptName:
        description: 部门名称
        type: string
      deptPath:
        description: 路径
        type: string
      email:
        description: 邮箱
        type: string
      leader:
        description: 负责人
        type: string
      parentId:
        description: 上级部门
        type: integer
      phone:
        description: 手机
        type: string
      sort:
        description: 排序
        type: integer
      status:
        description: 状态
        type: integer
    type: object
  dto.SysDeptUpdateReq:
    properties:
      deptId:
        description: 编码
        type: integer
      deptName:
        description: 部门名称
        type: string
      deptPath:
        description: 路径
        type: string
      email:
        description: 邮箱
        type: string
      leader:
        description: 负责人
        type: string
      parentId:
        description: 上级部门
        type: integer
      phone:
        description: 手机
        type: string
      sort:
        description: 排序
        type: integer
      status:
        description: 状态
        type: integer
    type: object
  dto.SysDictDataDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.SysDictDataGetAllResp:
    properties:
      label:
        type: string
      value:
        type: string
    type: object
  dto.SysDictDataInsertReq:
    properties:
      cssClass:
        type: string
      default:
        type: string
      dictLabel:
        type: string
      dictSort:
        type: integer
      dictType:
        type: string
      dictValue:
        type: string
      isDefault:
        type: string
      listClass:
        type: string
      remark:
        type: string
      status:
        type: integer
    type: object
  dto.SysDictDataUpdateReq:
    properties:
      cssClass:
        type: string
      default:
        type: string
      dictLabel:
        type: string
      dictSort:
        type: integer
      dictType:
        type: string
      dictValue:
        type: string
      id:
        type: integer
      isDefault:
        type: string
      listClass:
        type: string
      remark:
        type: string
      status:
        type: integer
    type: object
  dto.SysDictTypeDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.SysDictTypeInsertReq:
    properties:
      dictName:
        type: string
      dictType:
        type: string
      id:
        type: integer
      remark:
        type: string
      status:
        type: integer
    type: object
  dto.SysDictTypeUpdateReq:
    properties:
      dictName:
        type: string
      dictType:
        type: string
      id:
        type: integer
      remark:
        type: string
      status:
        type: integer
    type: object
  dto.SysLoginLogDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.SysMenuDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.SysMenuInsertReq:
    properties:
      action:
        description: 请求方式
        type: string
      apis:
        items:
          type: integer
        type: array
      breadcrumb:
        description: 是否面包屑
        type: string
      component:
        description: 组件
        type: string
      icon:
        description: 图标
        type: string
      isFrame:
        description: 是否frame
        type: string
      menuId:
        description: 编码
        type: integer
      menuName:
        description: 菜单name
        type: string
      menuType:
        description: 菜单类型
        type: string
      noCache:
        description: 是否缓存
        type: boolean
      parentId:
        description: 上级菜单
        type: integer
      path:
        description: 路径
        type: string
      paths:
        description: id路径
        type: string
      permission:
        description: 权限编码
        type: string
      sort:
        description: 排序
        type: integer
      sysApi:
        items:
          $ref: '#/definitions/go-admin_app_admin_models.SysApi'
        type: array
      title:
        description: 显示名称
        type: string
      visible:
        description: 是否显示
        type: string
    type: object
  dto.SysMenuUpdateReq:
    properties:
      action:
        description: 请求方式
        type: string
      apis:
        items:
          type: integer
        type: array
      breadcrumb:
        description: 是否面包屑
        type: string
      component:
        description: 组件
        type: string
      icon:
        description: 图标
        type: string
      isFrame:
        description: 是否frame
        type: string
      menuId:
        description: 编码
        type: integer
      menuName:
        description: 菜单name
        type: string
      menuType:
        description: 菜单类型
        type: string
      noCache:
        description: 是否缓存
        type: boolean
      parentId:
        description: 上级菜单
        type: integer
      path:
        description: 路径
        type: string
      paths:
        description: id路径
        type: string
      permission:
        description: 权限编码
        type: string
      sort:
        description: 排序
        type: integer
      sysApi:
        items:
          $ref: '#/definitions/go-admin_app_admin_models.SysApi'
        type: array
      title:
        description: 显示名称
        type: string
      visible:
        description: 是否显示
        type: string
    type: object
  dto.SysOperaLogDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.SysPostDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.SysPostInsertReq:
    properties:
      postCode:
        type: string
      postId:
        type: integer
      postName:
        type: string
      remark:
        type: string
      sort:
        type: integer
      status:
        type: integer
    type: object
  dto.SysPostUpdateReq:
    properties:
      postCode:
        type: string
      postId:
        type: integer
      postName:
        type: string
      remark:
        type: string
      sort:
        type: integer
      status:
        type: integer
    type: object
  dto.SysRoleDeleteReq:
    properties:
      ids:
        items:
          type: integer
        type: array
    type: object
  dto.SysRoleInsertReq:
    properties:
      admin:
        type: boolean
      dataScope:
        type: string
      deptIds:
        items:
          type: integer
        type: array
      flag:
        description: 标记
        type: string
      menuIds:
        items:
          type: integer
        type: array
      remark:
        description: 备注
        type: string
      roleId:
        description: 角色编码
        type: integer
      roleKey:
        description: 角色代码
        type: string
      roleName:
        description: 角色名称
        type: string
      roleSort:
        description: 角色排序
        type: integer
      status:
        description: 状态 1禁用 2正常
        type: string
      sysDept:
        items:
          $ref: '#/definitions/go-admin_app_admin_models.SysDept'
        type: array
      sysMenu:
        items:
          $ref: '#/definitions/go-admin_app_admin_models.SysMenu'
        type: array
    type: object
  dto.SysRoleUpdateReq:
    properties:
      admin:
        type: boolean
      dataScope:
        type: string
      deptIds:
        items:
          type: integer
        type: array
      flag:
        description: 标记
        type: string
      menuIds:
        items:
          type: integer
        type: array
      remark:
        description: 备注
        type: string
      roleId:
        description: 角色编码
        type: integer
      roleKey:
        description: 角色代码
        type: string
      roleName:
        description: 角色名称
        type: string
      roleSort:
        description: 角色排序
        type: integer
      status:
        description: 状态
        type: string
      sysDept:
        items:
          $ref: '#/definitions/go-admin_app_admin_models.SysDept'
        type: array
      sysMenu:
        items:
          $ref: '#/definitions/go-admin_app_admin_models.SysMenu'
        type: array
    type: object
  dto.SysUserInsertReq:
    properties:
      avatar:
        type: string
      deptId:
        description: Email    string `json:"email" comment:"邮箱" vd:"len($)>0,email"`
        type: integer
      email:
        type: string
      nickName:
        type: string
      password:
        type: string
      phone:
        type: string
      postId:
        type: integer
      remark:
        type: string
      roleIds:
        items:
          type: integer
        type: array
      sex:
        type: string
      status:
        default: "1"
        type: string
      userId:
        description: 用户ID
        type: integer
      username:
        type: string
    type: object
  dto.SysUserUpdateReq:
    properties:
      avatar:
        type: string
      deptId:
        description: Email    string `json:"email" comment:"邮箱" vd:"len($)>0,email"`
        type: integer
      email:
        type: string
      nickName:
        type: string
      password:
        type: string
      phone:
        type: string
      postId:
        type: integer
      remark:
        type: string
      roleIds:
        items:
          type: integer
        type: array
      sex:
        type: string
      status:
        default: "1"
        type: string
      userId:
        description: 用户ID
        type: integer
      username:
        type: string
    type: object
  dto.UpdateStatusReq:
    properties:
      roleId:
        description: 角色编码
        type: integer
      status:
        description: 状态
        type: string
    type: object
  dto.UpdateSysUserStatusReq:
    properties:
      status:
        type: string
      userId:
        description: 用户ID
        type: integer
    type: object
  go-admin_app_admin_models.SysApi:
    properties:
      action:
        type: string
      handle:
        type: string
      id:
        type: integer
      path:
        type: string
      title:
        type: string
      type:
        type: string
      updatedAt:
        type: string
    type: object
  go-admin_app_admin_models.SysConfig:
    properties:
      configKey:
        type: string
      configName:
        type: string
      configType:
        type: string
      configValue:
        type: string
      id:
        type: integer
      isFrontend:
        type: string
      remark:
        type: string
      updatedAt:
        $ref: '#/definitions/models.XTime'
    type: object
  go-admin_app_admin_models.SysDept:
    properties:
      children:
        items:
          $ref: '#/definitions/go-admin_app_admin_models.SysDept'
        type: array
      dataScope:
        type: string
      deptId:
        description: 部门编码
        type: integer
      deptName:
        description: 部门名称
        type: string
      deptPath:
        type: string
      email:
        description: 邮箱
        type: string
      leader:
        description: 负责人
        type: string
      params:
        type: string
      parentId:
        description: 上级部门
        type: integer
      phone:
        description: 手机
        type: string
      sort:
        description: 排序
        type: integer
      status:
        description: 状态
        type: integer
      updatedAt:
        $ref: '#/definitions/models.XTime'
    type: object
  go-admin_app_admin_models.SysMenu:
    properties:
      action:
        type: string
      apis:
        items:
          type: integer
        type: array
      breadcrumb:
        type: string
      children:
        items:
          $ref: '#/definitions/go-admin_app_admin_models.SysMenu'
        type: array
      component:
        type: string
      dataScope:
        type: string
      icon:
        type: string
      is_select:
        type: boolean
      isFrame:
        type: string
      menuId:
        type: integer
      menuName:
        type: string
      menuType:
        type: string
      noCache:
        type: boolean
      params:
        type: string
      parentId:
        type: integer
      path:
        type: string
      paths:
        type: string
      permission:
        type: string
      roleId:
        type: integer
      sort:
        type: integer
      sysApi:
        items:
          $ref: '#/definitions/go-admin_app_admin_models.SysApi'
        type: array
      title:
        type: string
      updatedAt:
        $ref: '#/definitions/models.XTime'
      visible:
        type: string
    type: object
  handler.Login:
    properties:
      code:
        type: string
      password:
        type: string
      username:
        type: string
      uuid:
        type: string
    required:
    - code
    - password
    - username
    - uuid
    type: object
  models.Asset:
    properties:
      assetCode:
        type: string
      brand:
        type: string
      categoryId:
        type: integer
      id:
        type: integer
      remark:
        type: string
      snCode:
        type: string
      specification:
        type: string
      status:
        type: integer
      unit:
        type: string
      unitPrice:
        type: number
      updatedAt:
        $ref: '#/definitions/models.XTime'
    type: object
  models.AssetCategory:
    properties:
      categoryName:
        type: string
      id:
        type: integer
      remark:
        type: string
      updatedAt:
        $ref: '#/definitions/models.XTime'
    type: object
  models.AssetDisposal:
    properties:
      amount:
        type: number
      assetId:
        type: integer
      disposalAt:
        type: string
      disposalPerson:
        type: integer
      disposalType:
        type: integer
      disposalWay:
        type: integer
      id:
        type: integer
      locationId:
        type: integer
      reason:
        type: string
      remark:
        type: string
      updatedAt:
        $ref: '#/definitions/models.XTime'
    type: object
  models.AssetGroup:
    properties:
      groupName:
        type: string
      id:
        type: integer
      mainAssetId:
        type: integer
      remark:
        type: string
      updatedAt:
        $ref: '#/definitions/models.XTime'
    type: object
  models.AssetGroupMember:
    properties:
      assetGroupId:
        type: integer
      assetId:
        type: integer
      id:
        type: integer
      isMain:
        type: integer
      updatedAt:
        $ref: '#/definitions/models.XTime'
    type: object
  models.AssetInbound:
    properties:
      assetId:
        type: integer
      fromCode:
        type: string
      id:
        type: integer
      inboundAt:
        type: string
      inboundBy:
        type: integer
      inboundFrom:
        type: integer
      remark:
        type: string
      updatedAt:
        $ref: '#/definitions/models.XTime'
      warehouseId:
        type: integer
    type: object
  models.AssetOutbound:
    properties:
      assetId:
        type: integer
      id:
        type: integer
      outboundAt:
        type: string
      outboundBy:
        type: integer
      outboundTo:
        type: integer
      remark:
        type: string
      updatedAt:
        $ref: '#/definitions/models.XTime'
      warehouseId:
        type: integer
    type: object
  models.AssetPurchase:
    properties:
      brand:
        type: string
      categoryId:
        type: integer
      id:
        type: integer
      purchaseAt:
        type: string
      purchaseCode:
        type: string
      purchaseUser:
        type: integer
      quantity:
        type: integer
      remark:
        type: string
      specification:
        type: string
      supplierId:
        type: integer
      totalAmount:
        type: number
      unit:
        type: string
      unitPrice:
        type: number
      updatedAt:
        $ref: '#/definitions/models.XTime'
    type: object
  models.AssetPurchaseApply:
    properties:
      applyAt:
        type: string
      applyCode:
        type: string
      applyReason:
        type: string
      applyUser:
        type: integer
      approveAt:
        type: string
      approver:
        type: integer
      brand:
        type: string
      categoryId:
        type: integer
      id:
        type: integer
      quantity:
        type: integer
      remark:
        type: string
      specification:
        type: string
      status:
        type: integer
      supplierId:
        type: integer
      totalAmount:
        type: number
      unit:
        type: string
      unitPrice:
        type: number
      updatedAt:
        $ref: '#/definitions/models.XTime'
    type: object
  models.AssetReturn:
    properties:
      assetId:
        type: integer
      id:
        type: integer
      reason:
        type: string
      remark:
        type: string
      returnAt:
        type: string
      returnPerson:
        type: integer
      updatedAt:
        $ref: '#/definitions/models.XTime'
    type: object
  models.AssetStock:
    properties:
      categoryId:
        type: integer
      id:
        type: integer
      quantity:
        type: integer
      remark:
        type: string
      updatedAt:
        $ref: '#/definitions/models.XTime'
      warehouseId:
        type: integer
    type: object
  models.AssetSupplier:
    properties:
      address:
        type: string
      contactPerson:
        type: string
      email:
        type: string
      id:
        type: integer
      phoneNumber:
        type: string
      remark:
        type: string
      supplierName:
        type: string
      updatedAt:
        $ref: '#/definitions/models.XTime'
    type: object
  models.AssetWarehouse:
    properties:
      administratorId:
        type: integer
      id:
        type: integer
      remark:
        type: string
      updatedAt:
        $ref: '#/definitions/models.XTime'
      warehouseName:
        type: string
    type: object
  models.RsBandwidthFees:
    properties:
      charging:
        type: integer
      down:
        type: number
      id:
        type: integer
      isp:
        type: integer
      linePrice:
        type: number
      managerLineCost:
        type: number
      moreDialing:
        type: integer
      region:
        type: string
      transProd:
        type: integer
      up:
        type: number
      updatedAt:
        $ref: '#/definitions/models.XTime'
    type: object
  models.RsBusiness:
    properties:
      billingMethod:
        type: integer
      children: {}
      costCnf: {}
      desc:
        type: string
      enName:
        type: string
      endUsage:
        type: string
      id:
        type: integer
      layer:
        type: integer
      name:
        type: string
      parentId:
        type: integer
      startUsage:
        type: string
      status:
        type: integer
      updatedAt:
        $ref: '#/definitions/models.XTime'
      updatedUser:
        type: string
    type: object
  models.RsContract:
    properties:
      accountName:
        type: string
      address:
        type: string
      bandwidthFees:
        items:
          $ref: '#/definitions/models.RsBandwidthFees'
        type: array
      bankAccount:
        type: string
      bankName:
        type: string
      buId:
        type: integer
      customId:
        type: integer
      desc:
        type: string
      endTimeAt:
        type: string
      id:
        type: integer
      identifyNumber:
        type: string
      name:
        type: string
      number:
        type: string
      phone:
        type: string
      settlementType:
        type: integer
      signatoryId:
        type: integer
      startTimeAt:
        type: string
      type:
        type: integer
      updatedAt:
        $ref: '#/definitions/models.XTime'
      userId:
        type: integer
    type: object
  models.RsCustom:
    properties:
      address:
        type: string
      cooperation:
        type: integer
      desc:
        type: string
      id:
        type: integer
      name:
        type: string
      region:
        type: string
      type:
        type: integer
      updatedAt:
        $ref: '#/definitions/models.XTime'
    type: object
  models.RsCustomUser:
    properties:
      address:
        type: string
      buId:
        type: integer
      customId:
        type: integer
      dept:
        type: string
      desc:
        type: string
      duties:
        type: string
      email:
        type: string
      id:
        type: integer
      phone:
        type: string
      region:
        type: string
      updatedAt:
        $ref: '#/definitions/models.XTime'
      userName:
        type: string
    type: object
  models.RsDial:
    properties:
      account:
        type: string
      broadbandType:
        type: integer
      bu:
        type: string
      contractId:
        type: integer
      customId:
        type: integer
      desc:
        type: string
      deviceId:
        type: integer
      deviceName:
        type: string
      dialName:
        type: string
      hostId:
        type: integer
      hostInfo:
        additionalProperties: true
        type: object
      id:
        type: integer
      idcId:
        type: integer
      idcInfo: {}
      ip:
        type: string
      ipV6:
        type: string
      isManager:
        type: integer
      ispId:
        type: integer
      ispName:
        type: string
      mac:
        type: string
      natType:
        type: string
      networkingStatus:
        type: integer
      pass:
        type: string
      runTimeAt:
        type: string
      source:
        type: integer
      status:
        type: integer
      updatedAt:
        $ref: '#/definitions/models.XTime'
    type: object
  models.RsHost:
    properties:
      allLine:
        type: integer
      auth:
        type: integer
      balance:
        type: number
      belong:
        type: integer
      business:
        items:
          $ref: '#/definitions/models.RsBusiness'
        type: array
      cpu:
        type: integer
      desc:
        type: string
      dialList: {}
      disk: {}
      gateway:
        type: string
      healthy:
        $ref: '#/definitions/sql.NullTime'
      hostname:
        type: string
      id:
        type: integer
      idc:
        type: integer
      idcInfo: {}
      ip:
        type: string
      isp:
        type: integer
      kernel:
        type: string
      lineBandwidth:
        type: number
      lineType:
        type: integer
      mac:
        type: string
      mask:
        type: string
      memory:
        type: integer
      memoryMonitor: {}
      netDevice: {}
      networkType:
        type: integer
      probeShell:
        type: string
      publicIp:
        type: string
      region:
        type: string
      remark:
        description: 166陕西延安宜川集义郭东机房电信1-2-11(30*100M) 拆分解析到线路和带宽
        type: string
      remotePort:
        type: string
      sn:
        type: string
      status:
        type: integer
      system:
        additionalProperties: true
        type: object
      tag:
        items:
          $ref: '#/definitions/models.RsTag'
        type: array
      transProvince:
        type: integer
      updatedAt:
        $ref: '#/definitions/models.XTime'
      updatedUser:
        type: string
    type: object
  models.RsHostChargingDay:
    properties:
      banlance95:
        type: string
      businessId:
        type: string
      cost:
        type: string
      createBy:
        type: integer
      createdAt:
        $ref: '#/definitions/models.XTime'
      desc:
        type: string
      hostId:
        type: string
      id:
        type: integer
      sla:
        type: string
      updatedUser:
        type: string
    type: object
  models.RsHostSwitchLog:
    properties:
      bu_en_source:
        type: string
      bu_source:
        type: string
      bu_target_id:
        type: integer
      businessInfo: {}
      createBy:
        type: integer
      createdAt:
        $ref: '#/definitions/models.XTime'
      desc:
        type: string
      hostId:
        type: integer
      id:
        type: integer
      jobId:
        type: string
      updatedUser:
        type: string
    type: object
  models.RsIdc:
    properties:
      address:
        type: string
      belong:
        type: integer
      buId:
        type: integer
      customId:
        type: integer
      desc:
        type: string
      id:
        type: integer
      ipV6:
        type: integer
      moreDialing:
        type: integer
      name:
        type: string
      number:
        type: integer
      region:
        type: string
      rsIdcCount:
        $ref: '#/definitions/models.RsIdcCount'
      status:
        type: integer
      transProvince:
        type: integer
      typeId:
        type: integer
      updatedAt:
        $ref: '#/definitions/models.XTime'
      webHookUrl:
        type: string
      wechatName:
        type: string
    type: object
  models.RsIdcCount:
    properties:
      allHost:
        type: integer
      buLine:
        type: integer
      managerLine:
        type: integer
      offLine:
        type: integer
      onLine:
        type: integer
    type: object
  models.RsTag:
    properties:
      desc:
        type: string
      id:
        type: integer
      name:
        type: string
      updatedAt:
        $ref: '#/definitions/models.XTime'
      updatedUser:
        type: string
    type: object
  models.XTime:
    properties:
      time.Time:
        type: string
    type: object
  response.Page:
    properties:
      count:
        type: integer
      pageIndex:
        type: integer
      pageSize:
        type: integer
    type: object
  response.Response:
    properties:
      code:
        type: integer
      msg:
        type: string
      requestId:
        description: 数据集
        type: string
      status:
        type: string
    type: object
  sql.NullTime:
    properties:
      time:
        type: string
      valid:
        description: Valid is true if Time is not NULL
        type: boolean
    type: object
  tools.Params:
    properties:
      treeCode:
        type: string
      treeName:
        type: string
      treeParentCode:
        type: string
    type: object
  tools.SysColumns:
    properties:
      columnComment:
        type: string
      columnId:
        type: integer
      columnName:
        type: string
      columnType:
        type: string
      createBy:
        type: integer
      createdAt:
        type: string
      deletedAt:
        type: string
      dictType:
        type: string
      edit:
        type: boolean
      fkCol:
        items:
          $ref: '#/definitions/tools.SysColumns'
        type: array
      fkLabelId:
        type: string
      fkLabelName:
        type: string
      fkTableName:
        type: string
      fkTableNameClass:
        type: string
      fkTableNamePackage:
        type: string
      goField:
        type: string
      goType:
        type: string
      htmlType:
        type: string
      increment:
        type: boolean
      insert:
        type: boolean
      isEdit:
        type: string
      isIncrement:
        type: string
      isInsert:
        type: string
      isList:
        type: string
      isPk:
        type: string
      isQuery:
        type: string
      isRequired:
        type: string
      jsonField:
        type: string
      list:
        type: string
      pk:
        type: boolean
      query:
        type: boolean
      queryType:
        type: string
      remark:
        type: string
      required:
        type: boolean
      sort:
        type: integer
      superColumn:
        type: boolean
      tableId:
        type: integer
      updateBy:
        type: integer
      updatedAt:
        type: string
      usableColumn:
        type: boolean
    type: object
  tools.SysTables:
    properties:
      businessName:
        type: string
      className:
        description: 类名
        type: string
      columns:
        items:
          $ref: '#/definitions/tools.SysColumns'
        type: array
      createdAt:
        type: string
      crud:
        type: boolean
      dataScope:
        type: string
      deletedAt:
        type: string
      functionAuthor:
        description: 功能作者
        type: string
      functionName:
        description: 功能名称
        type: string
      isActions:
        type: integer
      isAuth:
        type: integer
      isDataScope:
        type: integer
      isLogicalDelete:
        type: string
      logicalDelete:
        type: boolean
      logicalDeleteColumn:
        type: string
      moduleFrontName:
        description: 前端文件名
        type: string
      moduleName:
        description: go文件名
        type: string
      options:
        type: string
      packageName:
        description: 包名
        type: string
      params:
        $ref: '#/definitions/tools.Params'
      pkColumn:
        type: string
      pkGoField:
        type: string
      pkJsonField:
        type: string
      remark:
        type: string
      tableComment:
        description: 表备注
        type: string
      tableId:
        description: 表编码
        type: integer
      tableName:
        description: 表名称
        type: string
      tplCategory:
        type: string
      tree:
        type: boolean
      treeCode:
        type: string
      treeName:
        type: string
      treeParentCode:
        type: string
      updatedAt:
        type: string
    type: object
info:
  contact: {}
  description: 基于Gin + Vue + Ant UI的前后端分离权限管理系统的接口文档
  license:
    name: MIT
  title: go-admin API
  version: 2.0.0
paths:
  /api/v1/app-config:
    get:
      description: 获取系统配置信息，主要注意这里不在验证权限
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties:
                    type: string
                  type: object
              type: object
      summary: 获取系统前台配置信息，主要注意这里不在验证权限
      tags:
      - 配置管理
  /api/v1/asset:
    delete:
      description: 删除资产详情
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.AssetDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除资产详情
      tags:
      - 资产详情
    get:
      description: 获取资产详情列表
      parameters:
      - description: 资产编号
        in: query
        name: assetCode
        type: string
      - description: SN编码
        in: query
        name: snCode
        type: string
      - description: 资产类别
        in: query
        name: categoryId
        type: string
      - description: 规格型号
        in: query
        name: specification
        type: string
      - description: 品牌
        in: query
        name: brand
        type: string
      - description: 计量单位
        in: query
        name: unit
        type: string
      - description: 单价
        in: query
        name: unitPrice
        type: string
      - description: 状态(0=在库, 1=出库, 2=在用, 3=处置)
        in: query
        name: status
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.Asset'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取资产详情列表
      tags:
      - 资产详情
    post:
      consumes:
      - application/json
      description: 创建资产详情
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.AssetInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 创建资产详情
      tags:
      - 资产详情
  /api/v1/asset-category:
    delete:
      description: 删除资产类别
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.AssetCategoryDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除资产类别
      tags:
      - 资产类别
    get:
      description: 获取资产类别列表
      parameters:
      - description: 类别名称
        in: query
        name: categoryName
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.AssetCategory'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取资产类别列表
      tags:
      - 资产类别
    post:
      consumes:
      - application/json
      description: 创建资产类别
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.AssetCategoryInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 创建资产类别
      tags:
      - 资产类别
  /api/v1/asset-category/{id}:
    get:
      description: 获取资产类别
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.AssetCategory'
              type: object
      security:
      - Bearer: []
      summary: 获取资产类别
      tags:
      - 资产类别
    put:
      consumes:
      - application/json
      description: 修改资产类别
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.AssetCategoryUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改资产类别
      tags:
      - 资产类别
  /api/v1/asset-disposal:
    delete:
      description: 删除资产处置记录
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.AssetDisposalDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除资产处置记录
      tags:
      - 资产处置记录
    get:
      description: 获取资产处置记录列表
      parameters:
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.AssetDisposal'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取资产处置记录列表
      tags:
      - 资产处置记录
    post:
      consumes:
      - application/json
      description: 创建资产处置记录
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.AssetDisposalInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 创建资产处置记录
      tags:
      - 资产处置记录
  /api/v1/asset-disposal/{id}:
    get:
      description: 获取资产处置记录
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.AssetDisposal'
              type: object
      security:
      - Bearer: []
      summary: 获取资产处置记录
      tags:
      - 资产处置记录
    put:
      consumes:
      - application/json
      description: 修改资产处置记录
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.AssetDisposalUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改资产处置记录
      tags:
      - 资产处置记录
  /api/v1/asset-group:
    delete:
      description: 删除资产组合
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.AssetGroupDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除资产组合
      tags:
      - 资产组合
    get:
      description: 获取资产组合列表
      parameters:
      - description: 资产组合名称
        in: query
        name: groupName
        type: string
      - description: 主资产编码
        in: query
        name: mainAssetId
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.AssetGroup'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取资产组合列表
      tags:
      - 资产组合
    post:
      consumes:
      - application/json
      description: 创建资产组合
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.AssetGroupInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 创建资产组合
      tags:
      - 资产组合
  /api/v1/asset-group-member:
    delete:
      description: 删除资产组合成员
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.AssetGroupMemberDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除资产组合成员
      tags:
      - 资产组合成员
    get:
      description: 获取资产组合成员列表
      parameters:
      - description: 资产组合编码
        in: query
        name: assetGroupId
        type: string
      - description: 资产编码
        in: query
        name: assetId
        type: string
      - description: 是否为主资产(1=是,0=否)
        in: query
        name: isMain
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.AssetGroupMember'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取资产组合成员列表
      tags:
      - 资产组合成员
    post:
      consumes:
      - application/json
      description: 创建资产组合成员
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.AssetGroupMemberInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 创建资产组合成员
      tags:
      - 资产组合成员
  /api/v1/asset-group-member/{id}:
    get:
      description: 获取资产组合成员
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.AssetGroupMember'
              type: object
      security:
      - Bearer: []
      summary: 获取资产组合成员
      tags:
      - 资产组合成员
    put:
      consumes:
      - application/json
      description: 修改资产组合成员
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.AssetGroupMemberUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改资产组合成员
      tags:
      - 资产组合成员
  /api/v1/asset-group/{id}:
    get:
      description: 获取资产组合
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.AssetGroup'
              type: object
      security:
      - Bearer: []
      summary: 获取资产组合
      tags:
      - 资产组合
    put:
      consumes:
      - application/json
      description: 修改资产组合
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.AssetGroupUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改资产组合
      tags:
      - 资产组合
  /api/v1/asset-inbound:
    delete:
      description: 删除资产入库记录
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.AssetInboundDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除资产入库记录
      tags:
      - 资产入库记录
    get:
      description: 获取资产入库记录列表
      parameters:
      - description: 资产编码
        in: query
        name: assetId
        type: string
      - description: 库房编码
        in: query
        name: warehouseId
        type: string
      - description: 来源(1=采购、0=直接入库)
        in: query
        name: inboundFrom
        type: string
      - description: 来源凭证编码(采购编码)
        in: query
        name: fromCode
        type: string
      - description: 入库人编码
        in: query
        name: inboundBy
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.AssetInbound'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取资产入库记录列表
      tags:
      - 资产入库记录
    post:
      consumes:
      - application/json
      description: 创建资产入库记录
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.AssetInboundInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 创建资产入库记录
      tags:
      - 资产入库记录
  /api/v1/asset-inbound/{id}:
    get:
      description: 获取资产入库记录
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.AssetInbound'
              type: object
      security:
      - Bearer: []
      summary: 获取资产入库记录
      tags:
      - 资产入库记录
    put:
      consumes:
      - application/json
      description: 修改资产入库记录
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.AssetInboundUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改资产入库记录
      tags:
      - 资产入库记录
  /api/v1/asset-outbound:
    delete:
      description: 删除资产出库记录
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.AssetOutboundDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除资产出库记录
      tags:
      - 资产出库记录
    get:
      description: 获取资产出库记录列表
      parameters:
      - description: 资产编码
        in: query
        name: assetId
        type: string
      - description: 库房编码
        in: query
        name: warehouseId
        type: string
      - description: 出库去向(客户编码)
        in: query
        name: outboundTo
        type: string
      - description: 出库人编码
        in: query
        name: outboundBy
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.AssetOutbound'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取资产出库记录列表
      tags:
      - 资产出库记录
    post:
      consumes:
      - application/json
      description: 创建资产出库记录
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.AssetOutboundInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 创建资产出库记录
      tags:
      - 资产出库记录
  /api/v1/asset-outbound/{id}:
    get:
      description: 获取资产出库记录
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.AssetOutbound'
              type: object
      security:
      - Bearer: []
      summary: 获取资产出库记录
      tags:
      - 资产出库记录
    put:
      consumes:
      - application/json
      description: 修改资产出库记录
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.AssetOutboundUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改资产出库记录
      tags:
      - 资产出库记录
  /api/v1/asset-purchase:
    delete:
      description: 删除资产采购记录
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.AssetPurchaseDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除资产采购记录
      tags:
      - 资产采购记录
    get:
      description: 获取资产采购记录列表
      parameters:
      - description: 采购单编号
        in: query
        name: purchaseCode
        type: string
      - description: 资产类型编码
        in: query
        name: categoryId
        type: string
      - description: 供应商编码
        in: query
        name: supplierId
        type: string
      - description: 采购人编码
        in: query
        name: purchaseUser
        type: string
      - description: 规格型号
        in: query
        name: specification
        type: string
      - description: 品牌
        in: query
        name: brand
        type: string
      - description: 采购日期
        in: query
        name: purchaseAt
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.AssetPurchase'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取资产采购记录列表
      tags:
      - 资产采购记录
    post:
      consumes:
      - application/json
      description: 创建资产采购记录
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.AssetPurchaseInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 创建资产采购记录
      tags:
      - 资产采购记录
  /api/v1/asset-purchase-apply:
    delete:
      description: 删除资产采购申请
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.AssetPurchaseApplyDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除资产采购申请
      tags:
      - 资产采购申请
    get:
      description: 获取资产采购申请列表
      parameters:
      - description: 申请单编号
        in: query
        name: applyCode
        type: string
      - description: 资产类型编码
        in: query
        name: categoryId
        type: string
      - description: 供应商编码
        in: query
        name: supplierId
        type: string
      - description: 申购人编码
        in: query
        name: applyUser
        type: string
      - description: 规格型号
        in: query
        name: specification
        type: string
      - description: 品牌
        in: query
        name: brand
        type: string
      - description: 申购日期
        in: query
        name: applyAt
        type: string
      - description: 审批人编码
        in: query
        name: approver
        type: string
      - description: 审批时间
        in: query
        name: approveAt
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.AssetPurchaseApply'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取资产采购申请列表
      tags:
      - 资产采购申请
    post:
      consumes:
      - application/json
      description: 创建资产采购申请
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.AssetPurchaseApplyInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 创建资产采购申请
      tags:
      - 资产采购申请
  /api/v1/asset-purchase-apply/{id}:
    get:
      description: 获取资产采购申请
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.AssetPurchaseApply'
              type: object
      security:
      - Bearer: []
      summary: 获取资产采购申请
      tags:
      - 资产采购申请
    put:
      consumes:
      - application/json
      description: 修改资产采购申请
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.AssetPurchaseApplyUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改资产采购申请
      tags:
      - 资产采购申请
  /api/v1/asset-purchase/{id}:
    get:
      description: 获取资产采购记录
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.AssetPurchase'
              type: object
      security:
      - Bearer: []
      summary: 获取资产采购记录
      tags:
      - 资产采购记录
    put:
      consumes:
      - application/json
      description: 修改资产采购记录
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.AssetPurchaseUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改资产采购记录
      tags:
      - 资产采购记录
  /api/v1/asset-return:
    delete:
      description: 删除资产退还记录
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.AssetReturnDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除资产退还记录
      tags:
      - 资产退还记录
    get:
      description: 获取资产退还记录列表
      parameters:
      - description: 资产编码
        in: query
        name: assetId
        type: integer
      - description: 退还人编码
        in: query
        name: returnPerson
        type: integer
      - description: 退还原因
        in: query
        name: reason
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.AssetReturn'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取资产退还记录列表
      tags:
      - 资产退还记录
    post:
      consumes:
      - application/json
      description: 创建资产退还记录
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.AssetReturnInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 创建资产退还记录
      tags:
      - 资产退还记录
  /api/v1/asset-return/{id}:
    get:
      description: 获取资产退还记录
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.AssetReturn'
              type: object
      security:
      - Bearer: []
      summary: 获取资产退还记录
      tags:
      - 资产退还记录
    put:
      consumes:
      - application/json
      description: 修改资产退还记录
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.AssetReturnUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改资产退还记录
      tags:
      - 资产退还记录
  /api/v1/asset-stock:
    delete:
      description: 删除资产库存
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.AssetStockDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除资产库存
      tags:
      - 资产库存
    get:
      description: 获取资产库存列表
      parameters:
      - description: 库房编码
        in: query
        name: warehouseId
        type: integer
      - description: 资产类别编码
        in: query
        name: categoryId
        type: integer
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.AssetStock'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取资产库存列表
      tags:
      - 资产库存
    post:
      consumes:
      - application/json
      description: 创建资产库存
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.AssetStockInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 创建资产库存
      tags:
      - 资产库存
  /api/v1/asset-stock/{id}:
    get:
      description: 获取资产库存
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.AssetStock'
              type: object
      security:
      - Bearer: []
      summary: 获取资产库存
      tags:
      - 资产库存
    put:
      consumes:
      - application/json
      description: 修改资产库存
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.AssetStockUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改资产库存
      tags:
      - 资产库存
  /api/v1/asset-supplier:
    delete:
      description: 删除资产供应商
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.AssetSupplierDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除资产供应商
      tags:
      - 资产供应商
    get:
      description: 获取资产供应商列表
      parameters:
      - description: 供应商名称
        in: query
        name: supplierName
        type: string
      - description: 联系人
        in: query
        name: contactPerson
        type: string
      - description: 联系电话
        in: query
        name: phoneNumber
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.AssetSupplier'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取资产供应商列表
      tags:
      - 资产供应商
    post:
      consumes:
      - application/json
      description: 创建资产供应商
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.AssetSupplierInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 创建资产供应商
      tags:
      - 资产供应商
  /api/v1/asset-supplier/{id}:
    get:
      description: 获取资产供应商
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.AssetSupplier'
              type: object
      security:
      - Bearer: []
      summary: 获取资产供应商
      tags:
      - 资产供应商
    put:
      consumes:
      - application/json
      description: 修改资产供应商
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.AssetSupplierUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改资产供应商
      tags:
      - 资产供应商
  /api/v1/asset-warehouse:
    delete:
      description: 删除资产库房
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.AssetWarehouseDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除资产库房
      tags:
      - 资产库房
    get:
      description: 获取资产库房列表
      parameters:
      - description: 库房名称
        in: query
        name: warehouseName
        type: string
      - description: 管理员编码
        in: query
        name: administratorId
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.AssetWarehouse'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取资产库房列表
      tags:
      - 资产库房
    post:
      consumes:
      - application/json
      description: 创建资产库房
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.AssetWarehouseInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 创建资产库房
      tags:
      - 资产库房
  /api/v1/asset-warehouse/{id}:
    get:
      description: 获取资产库房
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.AssetWarehouse'
              type: object
      security:
      - Bearer: []
      summary: 获取资产库房
      tags:
      - 资产库房
    put:
      consumes:
      - application/json
      description: 修改资产库房
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.AssetWarehouseUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改资产库房
      tags:
      - 资产库房
  /api/v1/asset/{id}:
    get:
      description: 获取资产详情
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.Asset'
              type: object
      security:
      - Bearer: []
      summary: 获取资产详情
      tags:
      - 资产详情
    put:
      consumes:
      - application/json
      description: 修改资产详情
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.AssetUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改资产详情
      tags:
      - 资产详情
  /api/v1/captcha:
    get:
      description: 获取验证码
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  type: string
                id:
                  type: string
                msg:
                  type: string
              type: object
      summary: 获取验证码
      tags:
      - 登陆
  /api/v1/db/columns/page:
    get:
      description: 数据库表列分页列表 / database table column page list
      parameters:
      - description: tableName / 数据表名称
        in: query
        name: tableName
        type: string
      - description: pageSize / 页条数
        in: query
        name: pageSize
        type: integer
      - description: pageIndex / 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      summary: 分页列表数据 / page list data
      tags:
      - 工具 / 生成工具
  /api/v1/db/tables/page:
    get:
      description: 数据库表分页列表 / database table page list
      parameters:
      - description: tableName / 数据表名称
        in: query
        name: tableName
        type: string
      - description: pageSize / 页条数
        in: query
        name: pageSize
        type: integer
      - description: pageIndex / 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      summary: 分页列表数据 / page list data
      tags:
      - 工具 / 生成工具
  /api/v1/dept:
    delete:
      description: 删除数据
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysDeptDeleteReq'
      responses:
        "200":
          description: '{"code": -1, "message": "删除失败"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 删除部门
      tags:
      - 部门
    get:
      description: 分页列表
      parameters:
      - description: deptName
        in: query
        name: deptName
        type: string
      - description: deptId
        in: query
        name: deptId
        type: string
      - description: position
        in: query
        name: position
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 分页部门列表数据
      tags:
      - 部门
    post:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysDeptInsertReq'
      responses:
        "200":
          description: '{"code": -1, "message": "添加失败"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 添加部门
      tags:
      - 部门
  /api/v1/dept/{deptId}:
    get:
      description: 获取JSON
      parameters:
      - description: deptId
        in: path
        name: deptId
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 获取部门数据
      tags:
      - 部门
    put:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysDeptUpdateReq'
      responses:
        "200":
          description: '{"code": -1, "message": "添加失败"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 修改部门
      tags:
      - 部门
  /api/v1/dict-data/option-select:
    get:
      description: 数据字典根据key获取
      parameters:
      - description: dictType
        in: query
        name: dictType
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  items:
                    $ref: '#/definitions/dto.SysDictDataGetAllResp'
                  type: array
              type: object
      security:
      - Bearer: []
      summary: 数据字典根据key获取
      tags:
      - 字典数据
  /api/v1/dict/data:
    delete:
      description: 删除数据
      parameters:
      - description: body
        in: body
        name: dictCode
        required: true
        schema:
          $ref: '#/definitions/dto.SysDictDataDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除字典数据
      tags:
      - 字典数据
    get:
      description: 获取JSON
      parameters:
      - description: status
        in: query
        name: status
        type: string
      - description: dictCode
        in: query
        name: dictCode
        type: string
      - description: dictType
        in: query
        name: dictType
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 字典数据列表
      tags:
      - 字典数据
    post:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysDictDataInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 添加字典数据
      tags:
      - 字典数据
  /api/v1/dict/data/{dictCode}:
    get:
      description: 获取JSON
      parameters:
      - description: 字典编码
        in: path
        name: dictCode
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 通过编码获取字典数据
      tags:
      - 字典数据
    put:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysDictDataUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改字典数据
      tags:
      - 字典数据
  /api/v1/dict/type:
    delete:
      description: 删除数据
      parameters:
      - description: body
        in: body
        name: dictCode
        required: true
        schema:
          $ref: '#/definitions/dto.SysDictTypeDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除字典类型
      tags:
      - 字典类型
    get:
      description: 获取JSON
      parameters:
      - description: dictName
        in: query
        name: dictName
        type: string
      - description: dictId
        in: query
        name: dictId
        type: string
      - description: dictType
        in: query
        name: dictType
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 字典类型列表数据
      tags:
      - 字典类型
    post:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysDictTypeInsertReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 添加字典类型
      tags:
      - 字典类型
  /api/v1/dict/type-option-select:
    get:
      description: 获取JSON
      parameters:
      - description: dictName
        in: query
        name: dictName
        type: string
      - description: dictId
        in: query
        name: dictId
        type: string
      - description: dictType
        in: query
        name: dictType
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 字典类型全部数据 代码生成使用接口
      tags:
      - 字典类型
  /api/v1/dict/type/{dictId}:
    get:
      description: 获取JSON
      parameters:
      - description: 字典类型编码
        in: path
        name: dictId
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 字典类型通过字典id获取
      tags:
      - 字典类型
    put:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysDictTypeUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改字典类型
      tags:
      - 字典类型
  /api/v1/getinfo:
    get:
      description: 获取JSON
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 获取个人信息
      tags:
      - 个人中心
  /api/v1/login:
    post:
      consumes:
      - application/json
      description: |-
        获取token
        LoginHandler can be used by clients to get a jwt token.
        Payload needs to be json in the form of {"username": "USERNAME", "password": "PASSWORD"}.
        Reply will be of the form {"token": "TOKEN"}.
        dev mode：It should be noted that all fields cannot be empty, and a value of 0 can be passed in addition to the account password
        注意：开发模式：需要注意全部字段不能为空，账号密码外可以传入0值
      parameters:
      - description: account
        in: body
        name: account
        required: true
        schema:
          $ref: '#/definitions/handler.Login'
      responses:
        "200":
          description: '{"code": 200, "expire": "2019-08-07T12:45:48+08:00", "token":
            ".eyJleHAiOjE1NjUxNTMxNDgsImlkIjoiYWRtaW4iLCJvcmlnX2lhdCI6MTU2NTE0OTU0OH0.-zvzHvbg0A"
            }'
          schema:
            type: string
      summary: 登陆
      tags:
      - 登陆
  /api/v1/menu:
    delete:
      description: 删除数据
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysMenuDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除菜单
      tags:
      - 菜单
    get:
      description: 获取JSON
      parameters:
      - description: menuName
        in: query
        name: menuName
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Menu列表数据
      tags:
      - 菜单
    post:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysMenuInsertReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 创建菜单
      tags:
      - 菜单
  /api/v1/menu/{id}:
    get:
      description: 获取JSON
      parameters:
      - description: id
        in: path
        name: id
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: Menu详情数据
      tags:
      - 菜单
    put:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysMenuUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改菜单
      tags:
      - 菜单
  /api/v1/menuTreeselect/{roleId}:
    get:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: roleId
        in: path
        name: roleId
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 角色修改使用的菜单列表
      tags:
      - 菜单
  /api/v1/menurole:
    get:
      description: 获取JSON
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 根据登录角色名称获取菜单列表数据（左菜单使用）
      tags:
      - 菜单
  /api/v1/post:
    delete:
      description: 删除数据
      parameters:
      - description: 请求参数
        in: body
        name: id
        required: true
        schema:
          $ref: '#/definitions/dto.SysPostDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除岗位
      tags:
      - 岗位
    get:
      description: 获取JSON
      parameters:
      - description: postName
        in: query
        name: postName
        type: string
      - description: postCode
        in: query
        name: postCode
        type: string
      - description: postId
        in: query
        name: postId
        type: string
      - description: status
        in: query
        name: status
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 岗位列表数据
      tags:
      - 岗位
    post:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysPostInsertReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 添加岗位
      tags:
      - 岗位
  /api/v1/post/{id}:
    put:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysPostUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改岗位
      tags:
      - 岗位
  /api/v1/post/{postId}:
    get:
      description: 获取JSON
      parameters:
      - description: 编码
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 获取岗位信息
      tags:
      - 岗位
  /api/v1/public/uploadFile:
    post:
      consumes:
      - multipart/form-data
      description: 获取JSON
      parameters:
      - description: type
        in: query
        name: type
        required: true
        type: string
      - description: file
        in: formData
        name: file
        required: true
        type: file
      responses:
        "200":
          description: '{"code": -1, "message": "添加失败"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 上传图片
      tags:
      - 公共接口
  /api/v1/role:
    delete:
      description: 删除数据
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysRoleDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除用户角色
      tags:
      - 角色/Role
    get:
      description: Get JSON
      parameters:
      - description: roleName
        in: query
        name: roleName
        type: string
      - description: status
        in: query
        name: status
        type: string
      - description: roleKey
        in: query
        name: roleKey
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 角色列表数据
      tags:
      - 角色/Role
    post:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysRoleInsertReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 创建角色
      tags:
      - 角色/Role
  /api/v1/role-status/{id}:
    put:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.RoleDataScopeReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 更新角色数据权限
      tags:
      - 角色/Role
  /api/v1/role/{id}:
    get:
      description: 获取JSON
      parameters:
      - description: roleId
        in: path
        name: roleId
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 获取Role数据
      tags:
      - 角色/Role
    put:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysRoleUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改用户角色
      tags:
      - 角色/Role
  /api/v1/rs-business:
    delete:
      description: 删除RsBusiness
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.RsBusinessDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除RsBusiness
      tags:
      - RsBusiness
    get:
      description: 获取RsBusiness列表
      parameters:
      - description: 开关
        in: query
        name: enable
        type: string
      - description: 业务云名称
        in: query
        name: name
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.RsBusiness'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取RsBusiness列表
      tags:
      - RsBusiness
    post:
      consumes:
      - application/json
      description: 创建RsBusiness
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.RsBusinessInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 创建RsBusiness
      tags:
      - RsBusiness
  /api/v1/rs-business/{id}:
    get:
      description: 获取RsBusiness
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.RsBusiness'
              type: object
      security:
      - Bearer: []
      summary: 获取RsBusiness
      tags:
      - RsBusiness
    put:
      consumes:
      - application/json
      description: 修改RsBusiness
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.RsBusinessUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改RsBusiness
      tags:
      - RsBusiness
  /api/v1/rs-contract:
    delete:
      description: 删除RsContract
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.RsContractDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除RsContract
      tags:
      - RsContract
    get:
      description: 获取RsContract列表
      parameters:
      - description: 合同名称
        in: query
        name: name
        type: string
      - description: 合同编号
        in: query
        name: number
        type: string
      - description: 商务人员
        in: query
        name: buId
        type: integer
      - description: 所属客户ID
        in: query
        name: customId
        type: integer
      - description: 签订人
        in: query
        name: signatoryId
        type: integer
      - description: 合同类型,contract_type
        in: query
        name: type
        type: integer
      - description: 结算方式,settlement_type
        in: query
        name: settlementType
        type: integer
      - description: 地址
        in: query
        name: address
        type: string
      - description: 电话
        in: query
        name: phone
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.RsContract'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取RsContract列表
      tags:
      - RsContract
    post:
      consumes:
      - application/json
      description: 创建RsContract
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.RsContractInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 创建RsContract
      tags:
      - RsContract
  /api/v1/rs-contract/{id}:
    get:
      description: 获取RsContract
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.RsContract'
              type: object
      security:
      - Bearer: []
      summary: 获取RsContract
      tags:
      - RsContract
    put:
      consumes:
      - application/json
      description: 修改RsContract
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.RsContractUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改RsContract
      tags:
      - RsContract
  /api/v1/rs-custom:
    delete:
      description: 删除RsCustom
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.RsCustomDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除RsCustom
      tags:
      - RsCustom
    get:
      description: 获取RsCustom列表
      parameters:
      - description: 客户名称
        in: query
        name: name
        type: string
      - description: 客户类型,customer_type
        in: query
        name: type
        type: integer
      - description: 合作状态,work_status
        in: query
        name: cooperation
        type: integer
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.RsCustom'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取RsCustom列表
      tags:
      - RsCustom
    post:
      consumes:
      - application/json
      description: 创建RsCustom
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.RsCustomInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 创建RsCustom
      tags:
      - RsCustom
  /api/v1/rs-custom-user:
    delete:
      description: 删除RsCustomUser
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.RsCustomUserDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除RsCustomUser
      tags:
      - RsCustomUser
    get:
      description: 获取RsCustomUser列表
      parameters:
      - description: 姓名
        in: query
        name: userName
        type: string
      - description: 所属客户
        in: query
        name: customId
        type: string
      - description: 所属商务人员
        in: query
        name: buId
        type: string
      - description: 联系号码
        in: query
        name: phone
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.RsCustomUser'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取RsCustomUser列表
      tags:
      - RsCustomUser
    post:
      consumes:
      - application/json
      description: 创建RsCustomUser
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.RsCustomUserInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 创建RsCustomUser
      tags:
      - RsCustomUser
  /api/v1/rs-custom-user/{id}:
    get:
      description: 获取RsCustomUser
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.RsCustomUser'
              type: object
      security:
      - Bearer: []
      summary: 获取RsCustomUser
      tags:
      - RsCustomUser
    put:
      consumes:
      - application/json
      description: 修改RsCustomUser
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.RsCustomUserUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改RsCustomUser
      tags:
      - RsCustomUser
  /api/v1/rs-custom/{id}:
    get:
      description: 获取RsCustom
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.RsCustom'
              type: object
      security:
      - Bearer: []
      summary: 获取RsCustom
      tags:
      - RsCustom
    put:
      consumes:
      - application/json
      description: 修改RsCustom
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.RsCustomUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改RsCustom
      tags:
      - RsCustom
  /api/v1/rs-dial:
    delete:
      description: 删除RsDial
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.RsDialDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除RsDial
      tags:
      - RsDial
    get:
      description: 获取RsDial列表
      parameters:
      - description: 所属客户
        in: query
        name: customId
        type: integer
      - description: 关联合同
        in: query
        name: contractId
        type: integer
      - description: 带宽类型,broadband_type
        in: query
        name: broadbandType
        type: integer
      - description: 是否管理线
        in: query
        name: isManager
        type: integer
      - description: IP地址
        in: query
        name: ip
        type: string
      - description: 线路名称
        in: query
        name: dialName
        type: string
      - description: 拨号状态,1:已联网 0:未联网 -1:联网异常
        in: query
        name: networkingStatus
        type: integer
      - description: 拨号状态,1:已拨通 0:待使用 -1:拨号异常
        in: query
        name: status
        type: integer
      - description: 拨号状态,0:录入 1:自动上报
        in: query
        name: source
        type: integer
      - description: 关联的IDC
        in: query
        name: idcId
        type: integer
      - description: 关联主机ID
        in: query
        name: hostId
        type: integer
      - description: 关联网卡ID
        in: query
        name: deviceId
        type: integer
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.RsDial'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取RsDial列表
      tags:
      - RsDial
    post:
      consumes:
      - application/json
      description: 创建RsDial
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.RsDialInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 创建RsDial
      tags:
      - RsDial
  /api/v1/rs-dial/{id}:
    get:
      description: 获取RsDial
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.RsDial'
              type: object
      security:
      - Bearer: []
      summary: 获取RsDial
      tags:
      - RsDial
    put:
      consumes:
      - application/json
      description: 修改RsDial
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.RsDialUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改RsDial
      tags:
      - RsDial
  /api/v1/rs-host:
    delete:
      description: 删除RsHost
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.RsHostDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除RsHost
      tags:
      - RsHost
    get:
      description: 获取RsHost列表
      parameters:
      - description: 开关
        in: query
        name: enable
        type: string
      - description: 主机名
        in: query
        name: hostName
        type: string
      - description: sn
        in: query
        name: sn
        type: string
      - description: ip
        in: query
        name: ip
        type: string
      - description: 内核版本
        in: query
        name: kernel
        type: string
      - description: 机器归属
        in: query
        name: belong
        type: string
      - description: 备注
        in: query
        name: remark
        type: string
      - description: 运营商
        in: query
        name: operator
        type: string
      - description: 主机状态
        in: query
        name: status
        type: string
      - description: 业务SN
        in: query
        name: businessSn
        type: string
      - description: 省份
        in: query
        name: province
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.RsHost'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取RsHost列表
      tags:
      - RsHost
    post:
      consumes:
      - application/json
      description: 创建RsHost
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.RsHostInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 创建RsHost
      tags:
      - RsHost
  /api/v1/rs-host-charging-day:
    delete:
      description: 删除RsHostChargingDay
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.RsHostChargingDayDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除RsHostChargingDay
      tags:
      - RsHostChargingDay
    get:
      description: 获取RsHostChargingDay列表
      parameters:
      - description: 切换的业务ID
        in: query
        name: businessId
        type: string
      - description: 关联的主机ID
        in: query
        name: hostId
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.RsHostChargingDay'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取RsHostChargingDay列表
      tags:
      - RsHostChargingDay
    post:
      consumes:
      - application/json
      description: 创建RsHostChargingDay
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.RsHostChargingDayInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 创建RsHostChargingDay
      tags:
      - RsHostChargingDay
  /api/v1/rs-host-charging-day/{id}:
    get:
      description: 获取RsHostChargingDay
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.RsHostChargingDay'
              type: object
      security:
      - Bearer: []
      summary: 获取RsHostChargingDay
      tags:
      - RsHostChargingDay
    put:
      consumes:
      - application/json
      description: 修改RsHostChargingDay
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.RsHostChargingDayUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改RsHostChargingDay
      tags:
      - RsHostChargingDay
  /api/v1/rs-host-switch-log:
    delete:
      description: 删除RsHostSwitchLog
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.RsHostSwitchLogDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除RsHostSwitchLog
      tags:
      - RsHostSwitchLog
    get:
      description: 获取RsHostSwitchLog列表
      parameters:
      - description: 切换的主机ID
        in: query
        name: hostId
        type: string
      - description: 切换的新业务ID
        in: query
        name: businessId
        type: string
      - description: 原来的业务SN
        in: query
        name: businessSn
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.RsHostSwitchLog'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取RsHostSwitchLog列表
      tags:
      - RsHostSwitchLog
  /api/v1/rs-host-switch-log/{id}:
    get:
      description: 获取RsHostSwitchLog
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.RsHostSwitchLog'
              type: object
      security:
      - Bearer: []
      summary: 获取RsHostSwitchLog
      tags:
      - RsHostSwitchLog
  /api/v1/rs-host/{id}:
    get:
      description: 获取RsHost
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.RsHost'
              type: object
      security:
      - Bearer: []
      summary: 获取RsHost
      tags:
      - RsHost
    put:
      consumes:
      - application/json
      description: 修改RsHost
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.RsHostUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改RsHost
      tags:
      - RsHost
  /api/v1/rs-idc:
    delete:
      description: 删除RsIdc
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.RsIdcDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除RsIdc
      tags:
      - RsIdc
    get:
      description: 获取RsIdc列表
      parameters:
      - description: 机房编号
        in: query
        name: number
        type: integer
      - description: 机房名称
        in: query
        name: name
        type: string
      - description: 所属客户
        in: query
        name: customUser
        type: integer
      - description: 机房类型
        in: query
        name: typeId
        type: integer
      - description: 商务人员
        in: query
        name: businessUser
        type: integer
      - description: 机房状态
        in: query
        name: status
        type: integer
      - description: 机房归属
        in: query
        name: belong
        type: integer
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.RsIdc'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取RsIdc列表
      tags:
      - RsIdc
    post:
      consumes:
      - application/json
      description: 创建RsIdc
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.RsIdcInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 创建RsIdc
      tags:
      - RsIdc
  /api/v1/rs-idc/{id}:
    get:
      description: 获取RsIdc
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.RsIdc'
              type: object
      security:
      - Bearer: []
      summary: 获取RsIdc
      tags:
      - RsIdc
    put:
      consumes:
      - application/json
      description: 修改RsIdc
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.RsIdcUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改RsIdc
      tags:
      - RsIdc
  /api/v1/rs-tag:
    delete:
      description: 删除RsTag
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.RsTagDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除RsTag
      tags:
      - RsTag
    get:
      description: 获取RsTag列表
      parameters:
      - description: 开关
        in: query
        name: enable
        type: string
      - description: 业务云名称
        in: query
        name: name
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/models.RsTag'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取RsTag列表
      tags:
      - RsTag
    post:
      consumes:
      - application/json
      description: 创建RsTag
      parameters:
      - description: data
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.RsTagInsertReq'
      responses:
        "200":
          description: '{"code": 200, "message": "添加成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 创建RsTag
      tags:
      - RsTag
  /api/v1/rs-tag/{id}:
    get:
      description: 获取RsTag
      parameters:
      - description: id
        in: path
        name: id
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/models.RsTag'
              type: object
      security:
      - Bearer: []
      summary: 获取RsTag
      tags:
      - RsTag
    put:
      consumes:
      - application/json
      description: 修改RsTag
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.RsTagUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改RsTag
      tags:
      - RsTag
  /api/v1/server-monitor:
    get:
      description: 获取JSON
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 系统信息
      tags:
      - 系统信息
  /api/v1/set-config:
    get:
      consumes:
      - application/json
      description: 界面操作设置配置值的获取
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  additionalProperties: true
                  type: object
              type: object
      security:
      - Bearer: []
      summary: 获取配置
      tags:
      - 配置管理
    put:
      consumes:
      - application/json
      description: 界面操作设置配置值
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          items:
            $ref: '#/definitions/dto.GetSetSysConfigReq'
          type: array
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 设置配置
      tags:
      - 配置管理
  /api/v1/sys-api:
    delete:
      description: 删除接口管理
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysApiDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除接口管理
      tags:
      - 接口管理
    get:
      description: 获取接口管理列表
      parameters:
      - description: 名称
        in: query
        name: name
        type: string
      - description: 标题
        in: query
        name: title
        type: string
      - description: 地址
        in: query
        name: path
        type: string
      - description: 类型
        in: query
        name: action
        type: string
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/go-admin_app_admin_models.SysApi'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取接口管理列表
      tags:
      - 接口管理
  /api/v1/sys-api/{id}:
    get:
      description: 获取接口管理
      parameters:
      - description: id
        in: path
        name: id
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/go-admin_app_admin_models.SysApi'
              type: object
      security:
      - Bearer: []
      summary: 获取接口管理
      tags:
      - 接口管理
    put:
      consumes:
      - application/json
      description: 修改接口管理
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysApiUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改接口管理
      tags:
      - 接口管理
  /api/v1/sys-config:
    delete:
      description: 删除配置管理
      parameters:
      - description: ids
        in: body
        name: ids
        schema:
          items:
            type: integer
          type: array
      responses:
        "200":
          description: '{"code": 200, "message": "删除成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除配置管理
      tags:
      - 配置管理
    get:
      description: 获取配置管理列表
      parameters:
      - description: 名称
        in: query
        name: configName
        type: string
      - description: key
        in: query
        name: configKey
        type: string
      - description: 类型
        in: query
        name: configType
        type: string
      - description: 是否前端
        in: query
        name: isFrontend
        type: integer
      - description: 页条数
        in: query
        name: pageSize
        type: integer
      - description: 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  allOf:
                  - $ref: '#/definitions/response.Page'
                  - properties:
                      list:
                        items:
                          $ref: '#/definitions/go-admin_app_admin_models.SysApi'
                        type: array
                    type: object
              type: object
      security:
      - Bearer: []
      summary: 获取配置管理列表
      tags:
      - 配置管理
    post:
      consumes:
      - application/json
      description: 创建配置管理
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysConfigControl'
      responses:
        "200":
          description: '{"code": 200, "message": "创建成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 创建配置管理
      tags:
      - 配置管理
  /api/v1/sys-config/{id}:
    get:
      description: 根据Key获取SysConfig的Service
      parameters:
      - description: configKey
        in: path
        name: configKey
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            allOf:
            - $ref: '#/definitions/response.Response'
            - properties:
                data:
                  $ref: '#/definitions/dto.SysConfigByKeyReq'
              type: object
      security:
      - Bearer: []
      summary: 根据Key获取SysConfig的Service
      tags:
      - 配置管理
    put:
      consumes:
      - application/json
      description: 修改配置管理
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysConfigControl'
      responses:
        "200":
          description: '{"code": 200, "message": "修改成功"}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改配置管理
      tags:
      - 配置管理
  /api/v1/sys-login-log:
    delete:
      description: 登录日志删除
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysLoginLogDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 登录日志删除
      tags:
      - 登录日志
    get:
      description: 获取JSON
      parameters:
      - description: 用户名
        in: query
        name: username
        type: string
      - description: ip地址
        in: query
        name: ipaddr
        type: string
      - description: 归属地
        in: query
        name: loginLocation
        type: string
      - description: 状态
        in: query
        name: status
        type: string
      - description: 开始时间
        in: query
        name: beginTime
        type: string
      - description: 结束时间
        in: query
        name: endTime
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 登录日志列表
      tags:
      - 登录日志
  /api/v1/sys-login-log/{id}:
    get:
      description: 获取JSON
      parameters:
      - description: id
        in: path
        name: id
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 登录日志通过id获取
      tags:
      - 登录日志
  /api/v1/sys-opera-log:
    delete:
      description: 删除数据
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysOperaLogDeleteReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除操作日志
      tags:
      - 操作日志
    get:
      description: 获取JSON
      parameters:
      - description: title
        in: query
        name: title
        type: string
      - description: method
        in: query
        name: method
        type: string
      - description: requestMethod
        in: query
        name: requestMethod
        type: string
      - description: operUrl
        in: query
        name: operUrl
        type: string
      - description: operIp
        in: query
        name: operIp
        type: string
      - description: status
        in: query
        name: status
        type: string
      - description: beginTime
        in: query
        name: beginTime
        type: string
      - description: endTime
        in: query
        name: endTime
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 操作日志列表
      tags:
      - 操作日志
  /api/v1/sys-opera-log/{id}:
    get:
      description: 获取JSON
      parameters:
      - description: id
        in: path
        name: id
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 操作日志通过id获取
      tags:
      - 操作日志
  /api/v1/sys-user:
    get:
      description: 获取JSON
      parameters:
      - description: username
        in: query
        name: username
        type: string
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 列表用户信息数据
      tags:
      - 用户
    post:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: 用户数据
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysUserInsertReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 创建用户
      tags:
      - 用户
  /api/v1/sys-user/{userId}:
    delete:
      description: 删除数据
      parameters:
      - description: userId
        in: path
        name: userId
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 删除用户数据
      tags:
      - 用户
    get:
      description: 获取JSON
      parameters:
      - description: 用户编码
        in: path
        name: userId
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 获取用户
      tags:
      - 用户
    put:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.SysUserUpdateReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改用户数据
      tags:
      - 用户
  /api/v1/sys/tables/info:
    post:
      consumes:
      - application/json
      description: 添加表结构
      parameters:
      - description: tableName / 数据表名称
        in: query
        name: tables
        type: string
      responses:
        "200":
          description: '{"code": -1, "message": "添加失败"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 添加表结构
      tags:
      - 工具 / 生成工具
    put:
      consumes:
      - application/json
      description: 修改表结构
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/tools.SysTables'
      responses:
        "200":
          description: '{"code": -1, "message": "添加失败"}'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 修改表结构
      tags:
      - 工具 / 生成工具
  /api/v1/sys/tables/info/{tableId}:
    delete:
      description: 删除表结构
      parameters:
      - description: tableId
        in: path
        name: tableId
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": -1, "message": "删除失败"}'
          schema:
            type: string
      summary: 删除表结构
      tags:
      - 工具 / 生成工具
    get:
      description: 获取JSON
      parameters:
      - description: configKey
        in: path
        name: configKey
        required: true
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 获取配置
      tags:
      - 工具 / 生成工具
  /api/v1/sys/tables/page:
    get:
      description: 生成表分页列表
      parameters:
      - description: tableName / 数据表名称
        in: query
        name: tableName
        type: string
      - description: pageSize / 页条数
        in: query
        name: pageSize
        type: integer
      - description: pageIndex / 页码
        in: query
        name: pageIndex
        type: integer
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      summary: 分页列表数据
      tags:
      - 工具 / 生成工具
  /api/v1/user/avatar:
    post:
      consumes:
      - multipart/form-data
      description: 获取JSON
      parameters:
      - description: file
        in: formData
        name: file
        required: true
        type: file
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改头像
      tags:
      - 个人中心
  /api/v1/user/profile:
    get:
      description: 获取JSON
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 获取个人中心用户
      tags:
      - 个人中心
  /api/v1/user/pwd/reset:
    put:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.ResetSysUserPwdReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 重置用户密码
      tags:
      - 用户
  /api/v1/user/pwd/set:
    put:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.PassWord'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改密码
      tags:
      - 用户
  /api/v1/user/status:
    put:
      consumes:
      - application/json
      description: 获取JSON
      parameters:
      - description: body
        in: body
        name: data
        required: true
        schema:
          $ref: '#/definitions/dto.UpdateSysUserStatusReq'
      responses:
        "200":
          description: '{"code": 200, "data": [...]}'
          schema:
            $ref: '#/definitions/response.Response'
      security:
      - Bearer: []
      summary: 修改用户状态
      tags:
      - 用户
  /logout:
    post:
      consumes:
      - application/json
      description: 获取token
      responses:
        "200":
          description: '{"code": 200, "msg": "成功退出系统" }'
          schema:
            type: string
      security:
      - Bearer: []
      summary: 退出登录
securityDefinitions:
  Bearer:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
