{{$tableComment:=.TableComment}}
<template>
    <BasicLayout>
        <template #wrapper>
            <el-card class="box-card">
                <el-form ref="form" :model="form" label-width="100px" size="mini">
                    <el-row>
                        {{ range .Columns }}
                            {{- $x := .IsInsert -}}
                            {{- if (eq $x "1") -}}
                                {{- if (.Pk) }}
                                {{- else if eq .GoField "CreatedAt" -}}
                                {{- else if eq .GoField "layer" -}}
                                {{- else if eq .GoField "DeletedAt" -}}
                                {{- else if eq .GoField "CreateBy" -}}
                                {{- else }}
                                    <el-col :span="12">
                                        <el-form-item label="{{.ColumnComment}}ï¼š" prop="{{.JsonField}}">
                                            {{ if eq "input" .HtmlType -}}
                                            {{"{{"}} form.{{.JsonField}} {{"}}"}}
                                            {{- else if eq "select" .HtmlType -}}
                                                {{- if ne .FkTableName "" -}}
                                                {{"{{"}} selectDictLabel({{.JsonField}}Options, form.{{.JsonField}}) {{"}}"}}
                                                {{- else -}}
                                                {{"{{"}} selectDictLabel({{.JsonField}}Options, form.{{.JsonField}}) {{"}}"}}
                                                {{- end -}}
                                            {{- else if eq "radio" .HtmlType -}}
                                                <el-radio-group v-model="form.{{.JsonField}}" disabled>
                                                    <el-radio
                                                            v-for="dict in {{.JsonField}}Options"
                                                            :key="dict.value"
                                                            :label="dict.value"
                                                    >{{"{{"}} dict.label {{"}}"}}</el-radio>
                                                </el-radio-group>
                                            {{- else if eq "file" .HtmlType -}}
                                                <img :src="form.{{.JsonField}}" class="el-upload el-upload--picture-card" style="float:left">
                                            {{- else if eq "datetime" .HtmlType -}}
                                                {{"{{"}} parseTime(form.{{.JsonField}}) {{"}}"}}
                                            {{- else if eq "textarea" .HtmlType -}}
                                                {{"{{"}} form.{{.JsonField}} {{"}}"}}
                                            {{- end }}
                                        </el-form-item>
                                    </el-col>
                                {{- end }}
                            {{- end }}
                        {{- end }}
                    </el-row>
                </el-form>
            </el-card>
        </template>
    </BasicLayout>
</template>

<script>
    import { get{{.ClassName}} } from '@/api/{{ .PackageName}}/{{ .MLTBName}}'
    {{ $package:=.PackageName }}
    {{range .Columns}}
    {{- if ne .FkTableName "" -}}
    import {list{{.FkTableNameClass}} } from '@/api/{{ $package }}/{{ .FkTableNamePackage}}'
    {{ end -}}
    {{- end -}}

    export default {
        name: '{{.ClassName}}Detail',
        components: {
        },
        data() {
            return {
                {{range .Columns}}
                {{- if ne .DictType "" -}}
                {{.JsonField}}Options: [],
                {{- end -}}
                {{- end }}
                form: {
                }
        }
        },
        created() {
            const id = this.$route.query && this.$route.query.id
            get{{.ClassName}}(id).then(response => {
                this.form = response.data
            })
            {{range .Columns}}
            {{- if ne .DictType "" -}}
            this.getDicts('{{.DictType}}').then(response => {
                this.{{.JsonField}}Options = response.data
            })
            {{ end -}}
            {{- if ne .FkTableName "" -}}
            this.get{{.FkTableNameClass}}Items()
            {{ end -}}
            {{- end -}}
        },
        methods: {
        }
    }
</script>
